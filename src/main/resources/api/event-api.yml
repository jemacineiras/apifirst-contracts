asyncapi: 2.3.0
info:
  title: User Service
  version: 1.0.0
  description: User management Service
servers:
  development:
    url: development.gigantic-server.com
    description: Development server
    protocol: kafka
    protocolVersion: 0.9.1
  staging:
    url: staging.gigantic-server.com
    description: Staging server
    protocol: kafka
    protocolVersion: 0.9.1
  production:
    url: api.gigantic-server.com
    description: Production server
    protocol: kafka
    protocolVersion: 0.9.1
channels:
  accountEmitter:
    publish:
      operationId: "accountEmitter"
      message:
        payload:
          $ref: '#/components/schemas/BankAccountEvent'
  storeMovement:
    subscribe:
      operationId: "storeMovement"
      message:
        payload:
          $ref: '#/components/schemas/BankMovementEvent'
  storeAccount:
    subscribe:
      operationId: "storeAccount"
      message:
        payload:
          $ref: '#/components/schemas/BankAccountEvent'
components:
  schemas:
    BankAccountEvent:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        accountNumber:
          type: string
          pattern: "^0{1,3}[3-9]2"
        amount:
          type: float
        lastUpdateDate:
          type: string
          format: date-time
        creationDate:
          type: string
          format: date-time
    BankMovementEvent:
      type: object
      properties:
        id:
          type: string
          example:
            0001
        accountNumber:
          type: string
          # pattern: "^0{1,3}[3-9]2"
          example:
            "00035"
        movement:
          type: string
          enum: [ "DEPOSIT", "WITHDRAW" ]
          example:
            "DEPOSIT"
        amount:
          type: number
          format: float
          example:
            "10.45"
        movementDate:
          type: string
          format: date-time
        appliedDate:
          type: string
          format: date-time